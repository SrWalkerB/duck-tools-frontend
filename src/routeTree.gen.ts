/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthenticateRouteImport } from './routes/_authenticate'
import { Route as AuthenticateDownloadVideoRouteImport } from './routes/_authenticate/download-video'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticateRoute = AuthenticateRouteImport.update({
  id: '/_authenticate',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticateDownloadVideoRoute =
  AuthenticateDownloadVideoRouteImport.update({
    id: '/download-video',
    path: '/download-video',
    getParentRoute: () => AuthenticateRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/download-video': typeof AuthenticateDownloadVideoRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/download-video': typeof AuthenticateDownloadVideoRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticate': typeof AuthenticateRouteWithChildren
  '/login': typeof LoginRoute
  '/_authenticate/download-video': typeof AuthenticateDownloadVideoRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/download-video'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/download-video'
  id: '__root__' | '/_authenticate' | '/login' | '/_authenticate/download-video'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticateRoute: typeof AuthenticateRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticate': {
      id: '/_authenticate'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticate/download-video': {
      id: '/_authenticate/download-video'
      path: '/download-video'
      fullPath: '/download-video'
      preLoaderRoute: typeof AuthenticateDownloadVideoRouteImport
      parentRoute: typeof AuthenticateRoute
    }
  }
}

interface AuthenticateRouteChildren {
  AuthenticateDownloadVideoRoute: typeof AuthenticateDownloadVideoRoute
}

const AuthenticateRouteChildren: AuthenticateRouteChildren = {
  AuthenticateDownloadVideoRoute: AuthenticateDownloadVideoRoute,
}

const AuthenticateRouteWithChildren = AuthenticateRoute._addFileChildren(
  AuthenticateRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthenticateRoute: AuthenticateRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
